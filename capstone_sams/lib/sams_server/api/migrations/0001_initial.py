# Generated by Django 4.2 on 2023-07-13 14:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('accountID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('firstName', models.CharField(max_length=100)),
                ('middleName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('accountRole', models.CharField(choices=[('physician', 'Physician'), ('medtech', 'MedTech'), ('nurse', 'Nurse'), ('admin', 'Admin')], max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'account',
            },
        ),
        migrations.CreateModel(
            name='Health_Record',
            fields=[
                ('recordNum', models.CharField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('comment', models.TextField(max_length=512)),
                ('pdf', models.FileField(upload_to='upload/')),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Medical_History',
            fields=[
                ('histNum', models.AutoField(primary_key=True, serialize=False)),
                ('health_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.health_record')),
            ],
        ),
        migrations.CreateModel(
            name='Medicine',
            fields=[
                ('drugId', models.CharField(primary_key=True, serialize=False)),
                ('drugCode', models.CharField()),
                ('drugName', models.CharField()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('patientID', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('firstName', models.CharField(max_length=100)),
                ('middleName', models.CharField(blank=True, max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('F', 'Female'), ('M', 'Male')])),
                ('birthDate', models.DateField()),
                ('registration', models.DateField()),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('email', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='pdfJson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('sympNum', models.AutoField(primary_key=True, serialize=False)),
                ('symptom', models.CharField(max_length=3000)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('presNum', models.AutoField(primary_key=True, serialize=False)),
                ('dosage', models.PositiveIntegerField()),
                ('timeFrame', models.DateTimeField()),
                ('amount', models.PositiveIntegerField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('health_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.health_record')),
            ],
        ),
        migrations.CreateModel(
            name='Prescribed_Medicine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medicine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.medicine')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Personal_Note',
            fields=[
                ('noteNum', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=20)),
                ('content', models.CharField(max_length=3000)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Symptom',
            fields=[
                ('sympID', models.AutoField(primary_key=True, serialize=False)),
                ('medical_history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.medical_history')),
                ('symptom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.symptom')),
            ],
        ),
        migrations.AddField(
            model_name='health_record',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.patient'),
        ),
        migrations.CreateModel(
            name='Data_Log',
            fields=[
                ('logNum', models.AutoField(primary_key=True, serialize=False)),
                ('event', models.CharField(max_length=500)),
                ('date', models.DateTimeField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comNum', models.AutoField(primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=3000)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('health_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.health_record')),
            ],
        ),
    ]
